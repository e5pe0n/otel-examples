services:
  express:
    build:
      context: .
      dockerfile: Dockerfile
      target: express
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./apps/express
    #       target: ./prod/express
    #       ignore:
    #         - node_modules/
    #     - action: rebuild
    #       path: ./apps/express/package.json
    env_file:
      - ./apps/express/.env
    restart: always
    environment:
      - OTEL_SERVICE_NAME=express
      - OTEL_METRICS_EXPORTER=prometheus
      - OTEL_METRICS_EXPORTER_PORT=9464
      - OTEL_TRACES_EXPORTER=otlp
      # - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4318/v1/traces
    ports:
      - "3030:3030"
    depends_on:
      - prometheus
      - tempo

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    ports:
      - "9090:9090"

  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - tempo-data:/var/tempo
    ports:
      - "3200:3200"
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - init

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
      - tempo


volumes:
  grafana-storage:
  tempo-data:
